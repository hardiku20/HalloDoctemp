
@{
    Layout = "_AdminLayout";
}


@model learning1.DBEntities.ViewModel.ProviderLocationViewModel;


<link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
<style>
    #map {
        position: center;
        height: 75vh;
        z-index: 1;
    }
</style>

<link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
<script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>

<link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
<link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY=" crossorigin="" />
<script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js" integrity="sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo=" crossorigin=""></script>

<div class=" container d-flex justify-content-center align-content-center flex-column">
    <div class="d-flex justify-content-between my-4">
        <h4 class="">Provider Location</h4>
        <div class="d-flex justify-content-end">
            <a href="javascript: history.go(-1)"
               class="btn btn-outline-info font-info text-decoration-none text-info fs-6 bg-white dark-mode1 d-flex align-items-center gap-1">
                <img src="/assets/images/chevron-left.svg" alt=""> Back
            </a>
        </div>
    </div>
    <div id="map" class="shadow p-2 "></div>
</div>








<script>
    var map = L.map('map').setView([38.8610, 71.2761], 4); // Set initial center and zoom level

    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
        attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
    }).addTo(map);


    var physicians = [
    @foreach (var physician in Model.Physicianlocation)
    {
        <text>{
                "Id": "@physician.PhysicianId",
                "Name": "@physician.PhysicianName",
                "Address": "@physician.Address"
            }, </text>
    }
            ]

    var iconCounter = 0;

    physicians.forEach(function (physician) {
        var id = physician.Id;
        var address = physician.Address;
        var name = physician.Name;


        fetch('https://nominatim.openstreetmap.org/search?format=json&q=' + address)
            .then(response => response.json())
            .then(data => {
                if (data.length > 0) {
                    var lat = parseFloat(data[0].lat);
                    var lon = parseFloat(data[0].lon);


                    // Create marker with offset to prevent overlapping
                    var marker = L.marker([lat + (0.0003 * iconCounter), lon]).addTo(map);
                    marker.bindPopup(name); // Bind physician's name to the marker

                    // Increment counter for next marker color
                    iconCounter = (iconCounter + 1);
                }
            });
    })

</script>