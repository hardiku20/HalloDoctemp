@{
    Layout = "_AdminLayout";
}@model learning1.DBEntities.ViewModel.ProviderLocationViewModel;<link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" /><style>    #map {        position: center;        height: 75vh;        z-index: 1;    }</style><link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" /><script src="https://unpkg.com/leaflet/dist/leaflet.js"></script><link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" /><link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY=" crossorigin="" /><script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js" integrity="sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo=" crossorigin=""></script><div class=" container d-flex justify-content-center align-content-center flex-column">    <div class="d-flex justify-content-between mb-3 ">        <h3 class="">Provider Location</h3>        <div>            <a class="btn btn-outline-info  p-2 px-4 fw-semibold" asp-controller="Admin" asp-action="dashboard" role="button">                <p class="m-0">&#60; Back</p>            </a>        </div>    </div>    <div id="map" class="shadow p-2 "></div></div><script>    var map = L.map('map').setView([38.8610, 71.2761], 4); // Set initial center and zoom level    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {        attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'    }).addTo(map);    var physicians = [    @foreach (var physician in Model.Physicianlocation)
    {        <text>{                "Id": "@physician.PhysicianId",                "Name": "@physician.PhysicianName",                "Address": "@physician.Address"            }, </text>    }            ]    var iconCounter = 0;    physicians.forEach(function (physician) {        var id = physician.Id;        var address = physician.Address;        var name = physician.Name;        fetch('https://nominatim.openstreetmap.org/search?format=json&q=' + address)            .then(response => response.json())            .then(data => {                if (data.length > 0) {                    var lat = parseFloat(data[0].lat);                    var lon = parseFloat(data[0].lon);                    // Create marker with offset to prevent overlapping                    var marker = L.marker([lat + (0.0003 * iconCounter), lon]).addTo(map);                    marker.bindPopup(name); // Bind physician's name to the marker                    // Increment counter for next marker color                    iconCounter = (iconCounter + 1);                }            });    })</script>